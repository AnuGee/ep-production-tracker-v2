import React from "react";
import "../styles/Responsive.css";

export default function ProgressBoard({ jobs }) {
  const steps = ["Sales", "Warehouse", "Production", "QC", "Logistics", "Account"];

  const getStatusColor = (step, job) => {
    if (!job.status) return "#e5e7eb";

    const status = job.status;
    const currentStep = job.currentStep;

    if (job.currentStep === step) {
      return "#facc15"; // ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥
    }

    switch (step) {
      case "Sales":
        return (job.product_name && job.po_number && job.volume && job.customer)
          ? "#4ade80"
          : "#e5e7eb";

      case "Warehouse":
        if (
          status.warehouse === "‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à" ||
          status.warehouse === "‡∏°‡∏µ‡∏Ñ‡∏£‡∏ö‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô"
        ) {
          return "#4ade80";
        }
        return "#e5e7eb";

      case "Production":
        if (status.production === "‡∏ú‡∏•‡∏¥‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à") return "#4ade80";

        if (
          status.warehouse === "‡∏°‡∏µ‡∏Ñ‡∏£‡∏ö‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô" &&
          ["QC", "COA", "Account", "Completed"].includes(currentStep)
        ) {
          return "#4ade80"; // ‚úÖ ‡∏Ç‡πâ‡∏≤‡∏° Production ‡πÑ‡∏õ QC
        }

        if (
          status.warehouse === "‡πÄ‡∏ö‡∏¥‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à" &&
          ["‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ú‡∏•‡∏¥‡∏ï", "‡∏£‡∏≠‡∏ú‡∏•‡∏ï‡∏£‡∏ß‡∏à", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏£‡∏£‡∏à‡∏∏"].includes(status.production)
        ) {
          return "#facc15";
        }

        if (
          status.qc_inspection === "‡∏ï‡∏£‡∏ß‡∏à‡∏ú‡πà‡∏≤‡∏ô" &&
          status.production === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏£‡∏£‡∏à‡∏∏"
        ) {
          return "#facc15";
        }

        if (
          currentStep === "Warehouse" &&
          status.qc_inspection === "‡∏ï‡∏£‡∏ß‡∏à‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô"
        ) {
          return "#e5e7eb"; // ‚ùå QC fail ‚Üí ‡∏Å‡∏•‡∏±‡∏ö Warehouse ‚Üí ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï Production
        }

        return "#e5e7eb";

case "QC": {
  if (
    status.qc_inspection === "‡∏ï‡∏£‡∏ß‡∏à‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß" &&
    status.qc_coa === "‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß"
  ) {
    return "#4ade80"; // ‚úÖ ‡∏ú‡πà‡∏≤‡∏ô QC + COA ‡πÅ‡∏•‡πâ‡∏ß
  }

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏≤‡∏ñ‡∏∂‡∏á Logistics ‡∏´‡∏£‡∏∑‡∏≠ Account ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á qc_inspection / qc_coa ‚Üí ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô
  if (
    ["Logistics", "Account", "Completed"].includes(currentStep) &&
    status.qc_inspection &&
    status.qc_coa
  ) {
    return "#4ade80";
  }

  if (
    currentStep === "Warehouse" &&
    status.qc_inspection === "‡∏ï‡∏£‡∏ß‡∏à‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô"
  ) {
    return "#e5e7eb"; // ‚ùå ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ Warehouse ‚Üí ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ QC ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°
  }

  if (
    ["‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à (‡∏£‡∏≠‡∏õ‡∏£‡∏±‡∏ö)", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à (Hold)"].includes(status.qc_inspection) ||
    status.qc_coa === "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°"
  ) {
    return "#facc15"; // üü° QC ‡∏¢‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏≠‡∏¢‡∏π‡πà
  }

  return "#e5e7eb"; // üî≤ Default
}

      case "Logistics": {
        const volume = Number(job.volume || 0);
        const delivered = (job.delivery_logs || []).reduce(
          (sum, d) => sum + Number(d.quantity || 0),
          0
        );
      
        if (delivered === 0) return "#e5e7eb";      // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡πà‡∏á
        if (delivered >= volume) return "#4ade80";  // ‡∏™‡πà‡∏á‡∏Ñ‡∏£‡∏ö
        return "#facc15";                           // ‡∏™‡πà‡∏á‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô
      }
      case "Account":
        if (status.account === "Invoice ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß") return "#4ade80";
        if (status.account === "Invoice ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å") return "#facc15";
        return "#e5e7eb";

      default:
        return "#e5e7eb";
    }
  };

  const sortedJobs = [...jobs].sort((a, b) =>
    a.product_name?.localeCompare(b.product_name)
  );

  // ‚úÖ ‡∏ß‡∏≤‡∏á‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢
const progressJobs = sortedJobs.filter((job) => {
  const po = job.po_number || "";
  const hasKG = po.includes("KG");
  const delivered = (job.delivery_logs || []).reduce(
    (sum, d) => sum + Number(d.quantity || 0), 0
  );
  const volume = Number(job.volume || 0);

  // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ -xxxKG ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡∏£‡∏ö‡πÉ‡∏ô‡∏£‡∏≠‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
  if (hasKG) return true;
  if (delivered === 0 || delivered === volume) return true;

  return false;
});

  return (
    <div className="progress-table-wrapper">
      <table className="progress-table">
        <thead>
          <tr>
            <th>Product</th>
            {steps.map((step) => (
              <th key={step}>{step}</th>
            ))}
          </tr>
        </thead>
<tbody>
  {progressJobs.map((job) => (
    <tr key={job.id}>
      <td><span className="product-label">üìÑ {job.product_name}</span></td>
      <td>{renderProgress("Sales", job)}</td>
      <td>{renderProgress("Warehouse", job)}</td>
      <td>{renderProgress("Production", job)}</td>
      <td>{renderProgress("QC", job)}</td>
      <td>{renderProgress("COA", job)}</td>
      <td>{renderProgress("Logistics", job)}</td>
      <td>{renderProgress("Account", job)}</td>
    </tr>
  ))}
</tbody>
      </table>
    </div>
  );
}
