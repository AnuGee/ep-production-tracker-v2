// src/pages/Home.jsx
import React, { useEffect, useState } from "react";
import ProgressBoard from "../components/ProgressBoard";
import DepartmentSummaryChart from "../components/DepartmentSummaryChart";
import { fetchJobsFromFirestore } from "../utils/firestoreUtils";
import { exportToExcel } from "../utils/excelUtils";
import "../styles/Responsive.css";

export default function Home() {
  const [jobs, setJobs] = useState([]);
  const [filteredJobs, setFilteredJobs] = useState([]);
  const [selectedYear, setSelectedYear] = useState("");
  const [selectedMonth, setSelectedMonth] = useState("");
  const [statusFilter, setStatusFilter] = useState("");

  useEffect(() => {
    fetchJobsFromFirestore(setJobs);
  }, []);

  useEffect(() => {
    let filtered = [...jobs];

    if (selectedYear) {
      filtered = filtered.filter((job) =>
        new Date(job.created_at).getFullYear().toString() === selectedYear
      );
    }

    if (selectedMonth) {
      const monthIndex = getMonthIndex(selectedMonth);
      filtered = filtered.filter((job) =>
        new Date(job.created_at).getMonth() === monthIndex
      );
    }

    if (statusFilter === "р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Ар╕гр╕┤р╣Ир╕б") {
      filtered = filtered.filter((job) => job.currentStep !== "Completed");
    } else if (statusFilter === "р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щр╣Бр╕ер╣Йр╕з") {
      filtered = filtered.filter((job) => job.currentStep === "Completed");
    }

    setFilteredJobs(filtered);
  }, [jobs, selectedYear, selectedMonth, statusFilter]);

  const getMonthIndex = (thaiMonth) => {
    const months = [
      "р╕бр╕Бр╕гр╕▓р╕Др╕б", "р╕Бр╕╕р╕бр╕ар╕▓р╕Юр╕▒р╕Щр╕Шр╣М", "р╕бр╕╡р╕Щр╕▓р╕Др╕б", "р╣Ар╕бр╕йр╕▓р╕вр╕Щ", "р╕Юр╕др╕йр╕ар╕▓р╕Др╕б", "р╕бр╕┤р╕Цр╕╕р╕Щр╕▓р╕вр╕Щ",
      "р╕Бр╕гр╕Бр╕Ор╕▓р╕Др╕б", "р╕кр╕┤р╕Зр╕лр╕▓р╕Др╕б", "р╕Бр╕▒р╕Щр╕вр╕▓р╕вр╕Щ", "р╕Хр╕╕р╕ер╕▓р╕Др╕б", "р╕Юр╕др╕ир╕Ир╕┤р╕Бр╕▓р╕вр╕Щ", "р╕Шр╕▒р╕Щр╕зр╕▓р╕Др╕б"
    ];
    return months.indexOf(thaiMonth);
  };

  const clearFilters = () => {
    setSelectedYear("");
    setSelectedMonth("");
    setStatusFilter("");
  };
  return (
    <div className="page-container">
      <h2>ЁЯПа <strong>р╕лр╕Щр╣Йр╕▓р╕лр╕ер╕▒р╕Б тАУ р╕ар╕▓р╕Юр╕гр╕зр╕бр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ</strong></h2>

      {/* ЁЯФО Filters */}
      <div className="filter-row">
        <select value={selectedYear} onChange={(e) => setSelectedYear(e.target.value)} className="input-box">
          <option value="">р╕Ыр╕╡</option>
          {["2025", "2026", "2027", "2028", "2029", "2030"].map((year) => (
            <option key={year} value={year}>{year}</option>
          ))}
        </select>

        <select value={selectedMonth} onChange={(e) => setSelectedMonth(e.target.value)} className="input-box">
          <option value="">р╣Ар╕Фр╕╖р╕нр╕Щ</option>
          {[
            "р╕бр╕Бр╕гр╕▓р╕Др╕б", "р╕Бр╕╕р╕бр╕ар╕▓р╕Юр╕▒р╕Щр╕Шр╣М", "р╕бр╕╡р╕Щр╕▓р╕Др╕б", "р╣Ар╕бр╕йр╕▓р╕вр╕Щ", "р╕Юр╕др╕йр╕ар╕▓р╕Др╕б", "р╕бр╕┤р╕Цр╕╕р╕Щр╕▓р╕вр╕Щ",
            "р╕Бр╕гр╕Бр╕Ор╕▓р╕Др╕б", "р╕кр╕┤р╕Зр╕лр╕▓р╕Др╕б", "р╕Бр╕▒р╕Щр╕вр╕▓р╕вр╕Щ", "р╕Хр╕╕р╕ер╕▓р╕Др╕б", "р╕Юр╕др╕ир╕Ир╕┤р╕Бр╕▓р╕вр╕Щ", "р╕Шр╕▒р╕Щр╕зр╕▓р╕Др╕б"
          ].map((month) => (
            <option key={month} value={month}>{month}</option>
          ))}
        </select>

        <select value={statusFilter} onChange={(e) => setStatusFilter(e.target.value)} className="input-box">
          <option value="">р╕Чр╕╕р╕Бр╕кр╕Цр╕▓р╕Щр╕░</option>
          <option value="р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Ар╕гр╕┤р╣Ир╕б">р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Ар╕гр╕┤р╣Ир╕б</option>
          <option value="р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щр╣Бр╕ер╣Йр╕з">р╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щр╣Бр╕ер╣Йр╕з</option>
        </select>

        <button onClick={clearFilters} className="clear-button">тЭМ р╕ер╣Йр╕▓р╕Зр╕Хр╕▒р╕зр╕Бр╕гр╕нр╕З</button>
        <button onClick={() => exportToExcel(filteredJobs)} className="submit-btn">ЁЯУе р╕кр╣Ир╕Зр╕нр╕нр╕Б Excel</button>
      </div>

      {/* ЁЯУж р╕гр╕зр╕бр╕вр╕нр╕Фр╕Ьр╕ер╕┤р╕Хр╣Гр╕Щр╣Ар╕Фр╕╖р╕нр╕Щр╕Щр╕╡р╣Й */}
      <div className="summary-box">
        ЁЯУж <strong>р╕гр╕зр╕бр╕вр╕нр╕Фр╕Ьр╕ер╕┤р╕Хр╣Гр╕Щр╣Ар╕Фр╕╖р╕нр╕Щр╕Щр╕╡р╣Й:</strong> {filteredJobs.length.toLocaleString()} р╕лр╕Щр╣Ир╕зр╕в
      </div>

      {/* ЁЯФ┤ р╕Др╕зр╕▓р╕бр╕Др╕╖р╕Ър╕лр╕Щр╣Йр╕▓р╕Вр╕нр╕Зр╕Зр╕▓р╕Щр╣Бр╕Хр╣Ир╕ер╕░р╕Кр╕╕р╕Ф */}
      <div className="section-box">
        <h3>ЁЯФ┤ <strong>р╕Др╕зр╕▓р╕бр╕Др╕╖р╕Ър╕лр╕Щр╣Йр╕▓р╕Вр╕нр╕Зр╕Зр╕▓р╕Щр╣Бр╕Хр╣Ир╕ер╕░р╕Кр╕╕р╕Ф</strong></h3>
        <ProgressBoard jobs={filteredJobs} />
      </div>

      {/* ЁЯУК р╣Бр╕Ьр╕Щр╕ар╕╣р╕бр╕┤р╕кр╕Цр╕▓р╕Щр╕░р╕Зр╕▓р╕Щр╕гр╕▓р╕вр╣Бр╕Ьр╕Щр╕Б */}
      <div className="section-box">
        <h3>ЁЯУК <strong>р╕кр╕гр╕╕р╕Ыр╕кр╕Цр╕▓р╕Щр╕░р╕Зр╕▓р╕Щр╕гр╕▓р╕вр╣Бр╕Ьр╕Щр╕Б</strong></h3>
        <DepartmentSummaryChart jobs={filteredJobs} />
      </div>
      {/* ЁЯУЛ р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕Зр╕▓р╕Щр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф */}
      <div className="section-box">
        <h3>ЁЯУЛ <strong>р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕Зр╕▓р╕Щр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф</strong></h3>
        <table className="data-table">
          <thead>
            <tr>
              <th>Batch No</th>
              <th>р╕кр╕┤р╕Щр╕Др╣Йр╕▓</th>
              <th>р╕ер╕╣р╕Бр╕Др╣Йр╕▓</th>
              <th>р╕Ыр╕гр╕┤р╕бр╕▓р╕У</th>
              <th>р╕зр╕▒р╕Щр╕Чр╕╡р╣Ир╕кр╣Ир╕З</th>
              <th>р╕Вр╕▒р╣Йр╕Щр╕Хр╕нр╕Щр╕Ыр╕▒р╕Ир╕Ир╕╕р╕Ър╕▒р╕Щ</th>
              <th>р╕кр╕Цр╕▓р╕Щр╕░</th>
            </tr>
          </thead>
          <tbody>
            {filteredJobs.map((job, index) => (
              <tr key={index}>
                <td>{job.batch_no_production || job.batch_no_warehouse?.join(", ") || "-"}</td>
                <td>{job.product_name}</td>
                <td>{job.customer}</td>
                <td>{job.volume}</td>
                <td>{job.delivery_date}</td>
                <td>{job.currentStep}</td>
                <td>
                  {/* р╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Ыр╣Зр╕Щ Badge р╕кр╕╡ */}
                  <span className={
                    job.currentStep === "Completed" ? "status-green" :
                    job.currentStep === "Production" || job.currentStep === "QC" || job.currentStep === "Account" ? "status-yellow" :
                    "status-red"
                  }>
                    {job.status?.[job.currentStep?.toLowerCase()] || "-"}
                  </span>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
}
